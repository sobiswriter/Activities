// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates flirt questions for new students to help break the ice.
 *
 * - generateFlirtQuestion - A function that generates a flirt question.
 * - GenerateFlirtQuestionInput - The input type for the generateFlirtQuestion function.
 * - GenerateFlirtQuestionOutput - The return type for the generateFlirtQuestion function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFlirtQuestionInputSchema = z.object({
  topic: z.string().optional().describe('Optional topic for the flirt question.'),
});
export type GenerateFlirtQuestionInput = z.infer<
  typeof GenerateFlirtQuestionInputSchema
>;

const GenerateFlirtQuestionOutputSchema = z.object({
  question: z.string().describe('A flirt question for new students.'),
});
export type GenerateFlirtQuestionOutput = z.infer<
  typeof GenerateFlirtQuestionOutputSchema
>;

export async function generateFlirtQuestion(
  input: GenerateFlirtQuestionInput
): Promise<GenerateFlirtQuestionOutput> {
  return generateFlirtQuestionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateFlirtQuestionPrompt',
  input: {schema: GenerateFlirtQuestionInputSchema},
  output: {schema: GenerateFlirtQuestionOutputSchema},
  prompt: `You are a helpful assistant designed to generate flirt questions for new students.

  Generate a flirt question. The question should be appropriate for new students and designed to help break the ice and create a fun, engaging environment.  If a topic is provided, generate a question related to that topic.

  Topic: {{topic}}
  `,
});

const generateFlirtQuestionFlow = ai.defineFlow(
  {
    name: 'generateFlirtQuestionFlow',
    inputSchema: GenerateFlirtQuestionInputSchema,
    outputSchema: GenerateFlirtQuestionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
